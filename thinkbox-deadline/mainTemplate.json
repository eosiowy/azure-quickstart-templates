{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",

    "parameters": 
    {
        "location": 
        {
            "type": "string",
            "metadata": 
            {
                "description": "The region to deploy the resources into"
            }
        },

        "clusterName":
        {
            "type": "string",
            "metadata":
            {
                "description": "Prefix for all items created by this template."
            }
        },

        "storageAccount": 
        {
            "type": "string",
            "metadata": 
            {
                "description": "Name of the Storage Account. This has to be a uinique name, up to 24 chars, all lowercase."
            }
        },

        "storageAccountNewOrExisting" : 
        {
            "type": "string",
            "defaultValue" : "new",
            "allowedValues" : 
            [
                "new",
                "existing"
            ],
            "metadata": 
            {
                "Description": "Indicates whether the Storage Account is new or existing"
            }
        },

        "storageAccountType": 
        {
            "type": "string",
            "metadata": 
            {
                "description": "The type of the Storage Account created"
            },
            "defaultValue":"Standard_LRS"
        },

        "existingStorageAccountRG": 
        {
            "type": "string",
            "metadata": 
            {
                "description": "Resource Group of the existing storage account."
            },
            "defaultValue" : ""
        },

        "virtualNetworkName": 
        {
            "type": "string",
            "metadata": 
            {
                "description": "Name of the Virtual Network."
            }
        },

        "virtualNetworkAddressPrefix":
        {
            "type": "string",
            "metadata":
            {
                "description": "Address space for the virtual network."
            },
            "defaultValue": "10.2.0.0/16"
        },

        "virtualNetworkNewOrExisting":
        {
            "type": "string",
            "defaultValue": "new",
            "allowedValues":
            [
                "new",
                "existing"
            ],
            "metadata": 
            {
                "description": "Indicates whether the Virtual Network is new or existing."
            }
        },

        "existingVirtualNetworkRG":
        {
            "type": "string",
            "metadata":
            {
                "description": "Resource Group of the existing virtual network."
            },
            "defaultValue": ""
        },

        "publicIPName":
        {
            "type": "string",
            "metadata":
            {
                "description": "Name of the Public IP"
            }
        },

        "slaveDnsName":
        {
            "type": "string",
            "metadata":
            {
                "description": "DNS name for the slave that has a public IP."
            }
        },

        "publicIPNewOrExisting":
        {
            "type": "string",
            "defaultValue": "new",
            "allowedValues":
            [
                "new",
                "existing"
            ],
            "metadata":
            {
                "description": "Indicates whether the Public IP is new or existing."
            }
        },

        "existingPublicIPRG":
        {
            "type": "string",
            "metadata":
            {
                "description": "Resource Group of the existing Public IP."
            },
            "defaultValue": ""
        },

        "subnetName":
        {
            "type": "string",
            "metadata":
            {
                "description": "Name of the subnet."
            },
            "defaultValue": "subnet"
        },

        "subnetAddressSpace":
        {
            "type": "string",
            "metadata":
            {
                "description": "The availble address space for ips in this subnet."
            },
            "defaultValue": "10.2.0.0/24"
        },

        "adminUsername": 
        {
            "type": "string",
            "metadata": 
            {
                "description": "The name of the administrator of the new VM. Exclusion list: 'admin','administrator'"
            }
        },
        "adminPassword": 
        {
            "type": "securestring",
            "metadata": 
            {
                "description": "The password for the administrator account of the new VM"
            }
        },

        "repositoryVmSize":
        {
            "type": "string",
            "defaultValue": "Standard_A1",
            "metadata":
            {
                "description": "Size of the repository."
            },
            "allowedValues":
            [
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4",
                "Standard_A11",
                "Standard_D1",
                "Standard_D2",
                "Standard_D3",
                "Standard_D4",
                "Standard_D11",
                "Standard_D12",
                "Standard_D13",
                "Standard_D14"
            ]
        },

        "slaveVmSize":
        {
            "type": "string",
            "defaultValue": "Standard_A1",
            "metadata":
            {
                "description": "Size of the slave."
            },
            "allowedValues":
            [
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4",
                "Standard_A11",
                "Standard_D1",
                "Standard_D2",
                "Standard_D3",
                "Standard_D4",
                "Standard_D11",
                "Standard_D12",
                "Standard_D13",
                "Standard_D14"
            ]
        },

        "numberOfSlaves":
        {
            "type": "int",
            "metadata": 
            {
                "description": "The number of slave vms to start."
            }
        },
        
        "artifactsBaseUrl" : 
        {
            "type" : "string",
            "metadata" : {
                "artifactsBaseUrl" : "Base URL of the DataStax Template gallery package"
            },
            "defaultValue" : ""
        }
    },

    "variables": 
    {
        "apiVersion": "2015-05-01-preview",
        "templateBaseUrl": "[concat(parameters('artifactsBaseUrl'),'/')]",
        "repositoryName": "[concat( parameters('clusterName'), '-repository')]",
        "slaveName": "[concat( parameters('clusterName'), '-slave')]",
        "networkSecurityGroupName": "[concat( parameters('clusterName'), '-nsg')]",
        "networkInterfaceName": "[concat( parameters('clusterName'), '-nif')]",
        "fullDnsName": "[concat( parameters('clusterName'), '-public-dns')]",
        "storageAccountSetupURL" : "[concat('http://deadline.blob.core.windows.net/scripts/storageAccount-',parameters('storageAccountNewOrExisting'),'.json')]",
        "virtualNetworkSetupURL" : "[concat('http://deadline.blob.core.windows.net/scripts/virtualNetwork-',parameters('virtualNetworkNewOrExisting'),'.json')]",
        "publicIPSetupURL" : "[concat('http://deadline.blob.core.windows.net/scripts/publicIP-',parameters('virtualNetworkNewOrExisting'),'.json')]"
    },

    "resources": 
    [
        {
            "name": "storageAccountSetup",
            "type": "Microsoft.Resources/deployments",
            "apiVersion" : "2015-01-01",
            "properties" : 
            {
                "mode": "Incremental",
                "templateLink" : 
                {
                    "uri" : "[variables('storageAccountSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters" : 
                {
                    "location": 
                    {
                        "value": "[parameters('location')]"
                    },
                    "storageAccountType": 
                    {
                        "value": "[parameters('storageAccountType')]"
                    },
                    "storageAccountName" : 
                    {
                        "value": "[parameters('storageAccount')]"
                    },
                    "storageAccountExistingRG": 
                    {
                        "value": "[parameters('existingStorageAccountRG')]"
                    }
                }
            }
        },

        {
            "name": "publicIPSetup",
            "type": "Microsoft.Resources/deployments",
            "apiVersion" : "2015-01-01",
            "properties" : 
            {
                "mode": "Incremental",
                "templateLink" : 
                {
                    "uri" : "[variables('publicIPSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters" : 
                {
                    "location": 
                    {
                        "value": "[parameters('location')]"
                    },
                    "publicIPName" : 
                    {
                        "value": "[parameters('publicIPName')]"
                    },
                    "dnsName":
                    {
                        "value": "[parameters('slaveDnsName')]"
                    },
                    "existingPublicIPRG": 
                    {
                        "value": "[parameters('existingPublicIPRG')]"
                    }
                }
            }
        },

        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": 
            {
                "securityRules":
                [
                    {
                        "name": "mongo",
                        "properties":
                        {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "27070",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "rdp",
                        "properties":
                        {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },


        {
            "name": "virtualNetworkSetup",
            "type": "Microsoft.Resources/deployments",
            "apiVersion" : "2015-01-01",
            "properties" : 
            {
                "mode": "Incremental",
                "templateLink" : 
                {
                    "uri" : "[variables('virtualNetworkSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters" : 
                {
                    "location": 
                    {
                        "value": "[parameters('location')]"
                    },
                    "virtualNetworkName":
                    {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressPrefix":
                    {
                        "value": "[parameters('virtualNetworkAddressPrefix')]"
                    },
                    "subnetName":
                    {
                        "value": "[parameters('subnetName')]"
                    },
                    "subnetAddressSpace":
                    {
                        "value": "[parameters('subnetAddressSpace')]"
                    },
                    "existingVirtualNetworkRG":
                    {
                        "value": "[parameters('existingVirtualNetworkRG')]"
                    }
                }
            }
        },

        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('networkInterfaceName')]",
            "location": "[parameters('location')]",
            "dependsOn": 
            [
                "virtualNetworkSetup",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
            ],
            "properties": 
            {
                "ipConfigurations": 
                [
                    {
                        "name": "ipconfig",
                        "properties": 
                        {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": 
                            {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/', parameters('subnetName') )]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup":
                {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            }
        },


        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat( variables('networkInterfaceName'), '0')]",
            "location": "[parameters('location')]",
            "dependsOn": 
            [
                "virtualNetworkSetup",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
                "[resourceId('Microsoft.Resources/deployments', 'publicIPSetup' )]"
            ],
            "properties": 
            {
                "ipConfigurations": 
                [
                    {
                        "name": "ipconfig",
                        "properties": 
                        {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": 
                            {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/', parameters('subnetName') )]"
                            },
                            "publicIPAddress":
                            {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPName') )]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup":
                {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            }
        },


        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat( variables('networkInterfaceName'), add(copyindex(), 1))]",
            "location": "[parameters('location')]",
            "copy":
            {
                "name": "nifLoop",
                "count": "[sub(parameters('numberOfSlaves'), 1)]"
            },
            "dependsOn": 
            [
                "virtualNetworkSetup",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
            ],
            "properties": 
            {
                "ipConfigurations": 
                [
                    {
                        "name": "ipconfig",
                        "properties": 
                        {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": 
                            {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/', parameters('subnetName') )]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup":
                {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            }
        },

        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('repositoryName')]",
            "location": "[parameters('location')]",
            "dependsOn": 
            [
                "storageAccountSetup",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            ],
            "plan":
            {
                "name": "deadline-repository-7-2",
                "publisher": "thinkboxsoftware",
                "product": "deadline7-2"
            },
            "properties": 
            {
                "hardwareProfile": 
                {
                    "vmSize": "[parameters('repositoryVmSize')]"
                },
                "osProfile": 
                {
                    "computername": "azure-repo",
                    "adminUsername": "[parameters('adminUserName')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": 
                {
                    "imageReference":
                    {
                        "publisher": "thinkboxsoftware",
                        "offer": "deadline7-2",
                        "sku": "deadline-repository-7-2",
                        "version": "latest"
                    },
                    "osDisk": 
                    {
                        "name": "osdisk",
                        "vhd": 
                        {
                            "uri": "[concat('http://',parameters('storageAccount'),'.blob.core.windows.net/vhds/', variables('repositoryName'),'osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": 
                {
                    "networkInterfaces": 
                    [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                }
            }
        },

        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat( variables('repositoryName'), '/autoconf')]",
            "location": "[parameters('location')]",
            "dependsOn": 
            [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('repositoryName'))]"
            ],
            "properties":
            {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.4",
                "settings":
                {
                    "fileUris": 
                    [ 
                        "https://deadline.blob.core.windows.net/scripts/repo-autoconf.py"
                    ],
                    "commandToExecute": "[concat('python', ' repo-autoconf.py')]"
                }
            }
        },

        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('slaveName'), copyindex())]",
            "location": "[parameters('location')]",
            "copy":
            {
                "name": "nifLoop",
                "count": "[parameters('numberOfSlaves')]"
            },
            "plan":
            {
                "name": "deadline-slave-7-2",
                "publisher": "thinkboxsoftware",
                "product": "deadline7-2"
            },
            "dependsOn": [
                "storageAccountSetup",
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterfaceName'), copyindex()))]",
                "[resourceId('Microsoft.Compute/virtualMachines', variables('repositoryName'))]",
                "[concat( 'Microsoft.Compute/virtualMachines/', variables('repositoryName'), '/extensions/autoconf')]"
            ],
            "properties": 
            {
                "hardwareProfile": 
                {
                    "vmSize": "[parameters('slaveVmSize')]"
                },
                "osProfile": 
                {
                    "computername": "[concat('azure-slave', copyindex())]",
                    "adminUsername": "[parameters('adminUserName')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "customData" : "[base64(reference(variables('networkInterfaceName')).ipConfigurations[0].properties.privateIPAddress)]"
                },
                "storageProfile": 
                {
                    "imageReference":
                    {
                        "publisher": "thinkboxsoftware",
                        "offer": "deadline7-2",
                        "sku": "deadline-slave-7-2",
                        "version": "latest"
                    },
                    "osDisk": 
                    {
                        "name": "osdisk",
                        "vhd": 
                        {
                            "uri": "[concat('http://',parameters('storageAccount'),'.blob.core.windows.net/vhds/', variables('slaveName') , copyindex(), '-osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": 
                {
                    "networkInterfaces": 
                    [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterfaceName'), copyindex()) )]"
                        }
                    ]
                }
            }
        }
    ]
}
