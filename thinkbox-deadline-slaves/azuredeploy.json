{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "String",
            "metadata": {
                "description": "Region where the resources will be deployed"
            },
            "defaultValue": "westus"
        },
        "clusterName": {
            "type": "String",
            "metadata": {
                "description": "Identifier for all resources started by this template."
            },
            "defaultValue": "dl"
        },
        "vpnType": {
            "type": "String",
            "metadata": {
                "description": "Route based or policy based"
            },
            "defaultValue": "RouteBased",
            "allowedValues": [
                "RouteBased",
                "PolicyBased"
            ]
        },
        "localGatewayName": {
            "type": "string",
            "defaultValue": "localGateway",
            "metadata": {
                "description": "Aribtary name for gateway resource representing "
            }
        },
        "localGatewayIpAddress": {
            "type": "string",
            "metadata": {
                "description": "Public IP of your StrongSwan Instance"
            },
            "defaultValue": "184.71.72.166"
        },
        "localAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "CIDR block representing the address space of the other network's Subnet"
            },
            "defaultValue": "192.168.0.0/16"
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "azureVnet",
            "metadata": {
                "description": "Arbitrary name for the Azure Virtual Network"
            }
        },
        "azureVNetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.3.0.0/16",
            "metadata": {
                "description": "CIDR block representing the address space of the Azure VNet"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "Subnet1",
            "metadata": {
                "description": "Aribtrary name for the Azure Subnet"
            }
        },
        "subnetPrefix": {
            "type": "string",
            "defaultValue": "10.3.0.0/24",
            "metadata": {
                "description": "CIDR block for VM subnet, subset of azureVNetAddressPrefix address space"
            }
        },
        "gatewaySubnetPrefix": {
            "type": "string",
            "defaultValue": "10.3.200.0/29",
            "metadata": {
                "description": "CIDR block for gateway subnet, subsset of azureVNetAddressPrefix address space"
            }
        },
        "gatewayPublicIPName": {
            "type": "string",
            "defaultValue": "azureGatewayIP",
            "metadata": {
                "description": "Aribtary name for public IP resource used for the new azure gateway"
            }
        },
        "gatewayName": {
            "type": "string",
            "defaultValue": "azureGateway",
            "metadata": {
                "description": "Arbitrary name for the new gateway"
            }
        },
        "connectionName": {
            "type": "string",
            "defaultValue": "Azure2Other",
            "metadata": {
                "description": "Arbitrary name for the new connection between Azure VNet and other network"
            }
        },
        "sharedKey": {
            "type": "string",
            "metadata": {
                "description": "Shared key (PSK) for IPSec tunnel"
            },
            "defaultValue": "thinkKey"
        },
        "vmName": {
            "type": "string",
            "defaultValue": "node",
            "metadata": {
                "description": "Name of the sample VM to create"
            }
        },
        "slaveVMSize": {
            "type": "string",
            "defaultValue": "Standard_A1",
            "allowedValues": [
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A6",
                "Standard_A7",
                "Standard_A8",
                "Standard_A9",
                "Standard_A10",
                "Standard_A11",
                "Standard_D2",
                "Standard_D3",
                "Standard_D4",
                "Standard_D11",
                "Standard_D12",
                "Standard_D13",
                "Standard_D14"
            ],
            "metadata": {
                "description": "Size of the Virtual Machine."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for sample VM"
            },
            "defaultValue": "thinkbox"
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "User password for sample VM"
            },
            "defaultValue": "F00bar123"
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Stoarge Account Name for VM Disk"
            },
            "defaultValue": "ericosiowy"
        },
        "storageAccountType": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "The type of the Storage Account created"
            },
            "defaultValue": "Standard_LRS"
        },
        "storageAccountNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues":
            [
                "new",
                "existing"
            ],
            "metadata":
            {
                "description": "Indicates whether the Storage Account is new or existing."
            }
        },
        "existingStorageAccountRG": {
            "type": "string",
            "metadata":
            {
                "description": "Resource Group of the existing storage account."
            },
            "defaultValue": ""
        },
        "numberOfSlaves": {
            "type": "int",
            "metadata": {
                "description": "Number of Slaves Virtual Machines to start."
            },
            "defaultValue": 2
        },
        "repositoryPath": {
            "type": "string",
            "metadata": {
                "description": "Path to your Deadline Repository."
            },
            "defaultValue": "\\\\fs-01\\deadline7-2"
        }
    },
    "variables": {
        "imagePublisher": "thinkbox",
        "imageOffer": "deadline7-2",
        "imageSKU": "deadline-slave-7-2",
        "version": "1.0.0",

        "localGatewayName": "[concat(parameters('clusterName'),'-', parameters('localGatewayName'))]",
        "connectionName": "[concat(parameters('clusterName'), '-', parameters('connectionName'))]",
        "gatewayName": "[concat(parameters('clusterName'), '-', parameters('gatewayName'))]",
        "gatewayPublicIPName": "[concat(parameters('clusterName'), '-', parameters('gatewayPublicIPName'))]",
        "vmName": "[concat(parameters('clusterName'), '-', parameters('vmName'))]",
        "virtualNetworkName": "[concat(parameters('clusterName'), '-', parameters('virtualNetworkName'))]",

        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', concat(parameters('clusterName'), '-', parameters('virtualNetworkName')))]",
        "gatewaySubnetRef": "[concat(variables('vnetID'),'/subnets/','GatewaySubnet')]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
        "nicName": "[concat(parameters('clusterName'), '-', parameters('vmName'), '-nic')]",
        "vmStorageAccountContainerName": "vhds",
        "OSDiskName": "osDisk",
        "vmPublicIPName": "[concat(parameters('clusterName'), '-', parameters('vmName'), '-publicIP')]",
        "api-version": "2015-06-15",
        "storage-api-version": "2015-05-01-preview"
    },
    "resources": [
        {
            "apiVersion": "[variables('api-version')]",
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[variables('localGatewayName')]",
            "location": "[parameters('location')]",
            "properties": {
                "localNetworkAddressSpace": {
                    "addressPrefixes": [
                        "[parameters('localAddressPrefix')]"
                    ]
                },
                "gatewayIpAddress": "[parameters('localGatewayIpAddress')]"
            }
        },
        {
            "apiVersion": "[variables('api-version')]",
            "name": "[variables('connectionName')]",
            "type": "Microsoft.Network/connections",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworkGateways/', variables('gatewayName'))]",
                "[concat('Microsoft.Network/localNetworkGateways/', variables('localGatewayName'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('gatewayName'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGatewayName'))]"
                },
                "connectionType": "IPsec",
                "routingWeight": 10,
                "sharedKey": "[parameters('sharedKey')]"
            }
        },
        {
            "apiVersion": "[variables('api-version')]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('azureVNetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetPrefix')]"
                        }
                    },
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "[parameters('gatewaySubnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('api-version')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('gatewayPublicIPName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "apiVersion": "[variables('api-version')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('vmPublicIPName'), '-', copyindex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "ipLoop",
                "count": "[parameters('numberOfSlaves')]"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "apiVersion": "[variables('storage-api-version')]",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "type": "Microsoft.Storage/storageAccounts",
            "properties": {
                "accountType": "[parameters('storageAccountType')]"
            }
        },
        {
            "apiVersion": "[variables('api-version')]",
            "type": "Microsoft.Network/virtualNetworkGateways",
            "name": "[variables('gatewayName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('gatewayPublicIPName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('gatewaySubnetRef')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gatewayPublicIPName'))]"
                            }
                        },
                        "name": "vnetGatewayConfig"
                    }
                ],
                "gatewayType": "Vpn",
                "vpnType": "[parameters('vpnType')]",
                "enableBgp": "false"
            }
        },
        {
            "apiVersion": "[variables('api-version')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '-', copyindex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('numberOfSlaves')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('vmPublicIPName'), '-', copyindex())]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/virtualNetworkGateways/', variables('gatewayName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('vmPublicIPName'), '-', copyindex()))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('api-version')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('vmName'), '-', copyindex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('numberOfSlaves')]"
            },
            "plan": {
                "name": "deadline-slave-7-2",
                "publisher": "thinkboxsoftware",
                "product": "deadline7-2"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '-', copyindex())]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('slaveVMSize')]"
                },
                "osProfile": {
                    "computername": "[concat(variables('vmName'), '-', copyindex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "customData": "[base64(parameters('repositoryPath'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "thinkboxsoftware",
                        "offer": "deadline7-2",
                        "sku": "deadline-slave-7-2",
                        "version": "1.0.0"
                    },
                    "osDisk": {
                        "name": "osdisk1",
                        "vhd": {
                            "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'), copyindex(),'.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), '-', copyindex()))]"
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "[variables('api-version')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat( variables('vmName'), '-', copyindex(), '/slave_startup-', copyindex())]",
            "location": "[parameters('location')]",
            "dependsOn": 
            [
                "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('vmName'), '-', copyindex()) )]"
            ],
            "copy": {
                "name": "extensionLoop",
                "count": "[parameters('numberOfSlaves')]"
            },
            "properties":
            {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.4",
                "settings":
                {
                    "fileUris": 
                    [ 
                        "https://deadline.blob.core.windows.net/scripts/slave_startup.py"
                    ],
                    "commandToExecute": "[concat('C:\\Python27\\python.exe', ' slave_startup.py')]"
                }
            }
        }

    ]
}